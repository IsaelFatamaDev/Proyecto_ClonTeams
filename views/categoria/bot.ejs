<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="/css/bot.css">

</head>
<body>
  <button class="chatbot-toggler">
    <span class="material-symbols-rounded">mode_comment</span>
    <span class="material-symbols-outlined">close</span>
    </button>
    <form id="queryForm">
      
    <div class="chatbot">
    <header>
      <h2>Chatbot Valle Grande</h2>
      <span class="close-btn material-symbols-outlined">close</span>
    </header>
    <ul class="chatbox">
      <li class="chat incoming">
        <span class="material-symbols-outlined">smart_toy</span>
        <div id="output" class="output"></div>
    
    
      </li>
    </ul>
    
    <div class="chat-input">
      <div class="prompt-box">
          <input id="queryInput" name="query" placeholder="Ingresa tu consulta aquÃ­" type="text">
          <select style="width: 50%;" name="proyectoSeleccionado">
              <% proyectos.forEach(function(proyecto) { %>
                  <option value="<%= proyecto.id_proyecto + ',' + proyecto.nombre_proyecto + ',' + proyecto.descripcion + ',' + proyecto.fecha_inicio + ',' + proyecto.nombre_usuario + ',' + proyecto.enlaces %>">
                      <%= proyecto.nombre_proyecto %>
                  </option>
              <% }); %>
          </select>
          <button type="submit">Consultar</button>
          
          
          <span id="send-btn" class="material-symbols-rounded"></span>
        </div>
    </div>
    
    </div>
    </form>

    <script>
      const chatbotToggler = document.querySelector(".chatbot-toggler");
const closeBtn = document.querySelector(".close-btn");
const chatbox = document.querySelector(".chatbox");
const chatInput = document.querySelector(".chat-input textarea");
const sendChatBtn = document.querySelector(".chat-input span");





const handleChat = () => {
    userMessage = chatInput.value.trim(); // Get user entered message and remove extra whitespace
    if(!userMessage) return;

    // Clear the input textarea and set its height to default
    chatInput.value = "";
    chatInput.style.height = `${inputInitHeight}px`;

    // Append the user's message to the chatbox
    chatbox.appendChild(createChatLi(userMessage, "outgoing"));
    chatbox.scrollTo(0, chatbox.scrollHeight);
    
    setTimeout(() => {
        // Display "Thinking..." message while waiting for the response
        const incomingChatLi = createChatLi("Thinking...", "incoming");
        chatbox.appendChild(incomingChatLi);
        chatbox.scrollTo(0, chatbox.scrollHeight);
    }, 600);
}


sendChatBtn.addEventListener("click", handleChat);
closeBtn.addEventListener("click", () => document.body.classList.remove("show-chatbot"));
chatbotToggler.addEventListener("click", () => document.body.classList.toggle("show-chatbot"));
    </script>
</body>


</html>